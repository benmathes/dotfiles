# Adapted from https://github.com/necolas/dotfiles/blob/master/shell/bash_prompt
#
__git_prompt() {
  if [ $(git rev-parse --is-inside-work-tree &>/dev/null; echo "${?}") != '0' ]; then
    return;
  fi;

  local output='';
  local branchName='';

  if [ "$(git rev-parse --is-inside-git-dir 2> /dev/null)" == 'false' ]; then
    git update-index --really-refresh -q &>/dev/null;

    if ! $(git diff --quiet --ignore-submodules --cached); then
      output+='+'; # uncommitted changes
    fi;

    if ! $(git diff-files --quiet --ignore-submodules --); then
      output+='-'; # unstaged changes
    elif [ -n "$(git ls-files --others --exclude-standard)" ]; then
      output+='-'; # untracked files
    fi;
  fi;

  # Get the short symbolic ref.
  # If HEAD isnâ€™t a symbolic ref, get the short SHA for the latest commit
  # Otherwise, just give up.
  branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || \
    git rev-parse --short HEAD 2> /dev/null || \
    echo '(unknown)')";

  [ -n "${output}" ] && output=" [${output}]";

  echo -e "${1}${branchName}${violet}${output}";
}

set_prompts() {
  tput sgr0;
  local reset=$(tput sgr0);
  local blue=$(tput setaf 6);
  local cyan=$(tput setaf 2);
  local red=$(tput setaf 1)
  local violet=$(tput setaf 61);

  PS1="\[\033]0;\w\007\]";
  PS1+="\[${red}\]\u";
  PS1+="\[${blue}\]@";
  PS1+="\[${red}\]\h:";
  PS1+="\[${cyan}\]\W";
  PS1+="\$(__git_prompt \" ${violet}\")";
  PS1+="\[${blue}\] \$ \[${reset}\]";
  export PS1;

  PS2="\[${blue}\]> \[${reset}\]";
  export PS2;
}

set_prompts
unset set_prompts
